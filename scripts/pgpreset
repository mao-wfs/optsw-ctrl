#!/usr/bin/env python


"""Script to make a preset commands for the Model 3390.

Usage:
    $ scripts/pgpreset 1 E F # switch between E and F at 1 Hz
    $ scripts/pgpreset 1 E E # no switching

"""


# standard library
import sys
from typing import Dict, Sequence
from pathlib import Path


# constants
N_PATTERNS: str = 100000
PORT_TO_PATTERN: Dict[str, str] = {
    "E": "0",
    "F": "20480",
    "G": "4096",
    "H": "8192",
}


# helper function
def make_pattern(optsw_port_1: str, optsw_port_2: str) -> Sequence["str"]:
    pattern_1 = PORT_TO_PATTERN[optsw_port_1]
    pattern_2 = PORT_TO_PATTERN[optsw_port_2]

    return [pattern_1] * 1 + [pattern_2] * (N_PATTERNS - 1)


def get_pattern_freq(switch_freq: float) -> float:
    return N_PATTERNS * switch_freq


# pattern setup
switch_freq = int(sys.argv[1])
optsw_port_1 = sys.argv[2]
optsw_port_2 = sys.argv[3]

# make commands
pattern = make_pattern(optsw_port_1, optsw_port_2)
pattern_freq = get_pattern_freq(switch_freq)
filename = f"3390_{switch_freq}Hz_switch_{optsw_port_1}{optsw_port_2}.txt"

commands = f"""
FUNC:PATT VOLATILE
DIG:PATT:FREQ {pattern_freq:.2e}
DIG:PATT:STAR 1
DIG:PATT:STOP {len(pattern)}
DIG:PATT:REP ON
DIG:PATT:CLOC POS
DATA:PATT VOLATILE,{','.join(pattern)}
"""

with open(Path("preset") / filename, "w") as f:
    f.write(commands.strip())
